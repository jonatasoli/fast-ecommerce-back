name: Continuous Integration

on: [push]

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: pass123
          POSTGRES_DB: ecommerce-test
        ports:
          - 5432:5432

      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - "5672:5672"

    steps:

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python from pyproject.toml
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Lint code
        run: uv run make lint

      - name: Run tests and generate coverage
        env:
          DYNACONF_DATABASE_URL: "postgresql+psycopg://postgres_user:pass123@localhost/ecommerce-test"
          DYNACONF_DATABASE_URI: "postgresql+psycopg://postgres_user:pass123@localhost/ecommerce-test"
          FORCE_ENV_FOR_DYNACONF: 'testing'
          DYNACONF_FORCE_ENV_FOR_DYNACONF: 'testing'
          DYNACONF_REDIS_HOST: "localhost"
          DYNACONF_REDIS_PORT: "6379"
          DYNACONF_REDIS_DB: 0
          DYNACONF_GATEWAY_API: "API_KEY"
          DYNACONF_GATEWAY_CRYP: "CRYP_KEY"
          DYNACONF_PAYMENT_GATEWAY_URL: "URL_GATEWAY"
          DYNACONF_SENDGRID_API_KEY: "API_KEY"
          DYNACONF_EMAIL_FROM: "EMAIL"
          DYNACONF_API_MAIL_URL: "https://testapi.com/"
          DYNACONF_ACCESS_TOKEN_EXPIRE_MINUTES: 15
          DYNACONF_STRIPE_SECRET_KEY: "SECRET"
          DYNACONF_STRIPE_API_KEY: "API"
          DYNACONF_BROKER_URL: "amqp://guest:guest@localhost:5672//"
          DYNACONF_RESULT_BACKEND: "rpc://"
          DYNACONF_CAPI_SECRET: "RVd9r6ly08gbPMGi1EWbB_BWPKzd2n_uriOIipxDN70="
        run: |
          uv run pytest --cov=app --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
