[project]
name = "fast-ecommerce"
version = "0.2.1"
description = "Ecommerce API"
authors = [
    {author = "JÃ´natas Oliveira", email = "contact@jonatasoliveira.dev"},
]
license = "AGPL-3.0-or-later"
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "aiofiles>=24.1.0",
    "aiosqlite>=0.20.0",
    "alembic>=1.13.2",
    "asyncpg>=0.29.0",
    "bcrypt>=4.2.0",
    "boto3>=1.35.15",
    "cython>=3.0.11",
    "dynaconf>=3.2.6",
    "fastapi>=0.114.2",
    "faststream[rabbit]>=0.5.23",
    "httpx>=0.27.2",
    "jinja2>=3.1.4",
    "loguru>=0.7.2",
    "mail-service>=1.0.5",
    "mercadopago>=2.2.3",
    "opentelemetry-exporter-otlp>=1.27.0",
    "opentelemetry-instrumentation-logging>=0.48b0",
    "passlib[bcrypt]>=1.7.4",
    "pillow>=10.4.0",
    "psycopg[binary,pool]>=3.2.1",
    "pyjwt>=2.9.0",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.9",
    "redis>=5.0.8",
    "sendgrid>=6.11.0",
    "sentry-sdk[fastapi]>=2.14.0",
    "sqlalchemy[asyncio]>=2.0.34",
    "stripe>=10.10.0",
    "taskiq-faststream>=0.2.0",
    "uvicorn[standard]>=0.30.6",
    "zipp>=3.20.1",
]

[tool.uv]
dev-dependencies = [
    "anyio>=4.4.0",
    "coverage>=7.6.1",
    "factory-boy>=3.3.1",
    "ipdb>=0.13.13",
    "isort>=5.13.2",
    "pyright>=1.1.379",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-env>=1.1.4",
    "pytest-mock>=3.14.0",
    "pytest-ordering>=0.6",
    "pytest-sugar>=1.0.0",
    "pytest-watch>=4.2.0",
    "ruff>=0.6.4",
    "ruff-lsp>=0.0.56",
    "taskipy>=1.13.0",
]


[tool.poetry.group.otel.dependencies]
opentelemetry-distro = "^0.45b0"
opentelemetry-exporter-otlp = "^1.24.0"

[tool.ruff]
lint.select = ["A", "B", "C", "D", "E", "F", "G", "N", "S", "T", "W", "C4", "ARG", "BLE", "COM", "DTZ", "EM", "ERA", "FBT", "ICN", "ISC", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP"]
lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "N", "S", "T", "W", "ARG", "BLE", "COM", "DTZ", "EM", "ERA", "FBT", "ICN", "ISC", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP"]
lint.unfixable = []
lint.ignore = ["D100", "D101", "D102", "D107", "D203", "D213"]
src = ["app", "tests"]
# Exclude a variety of commonly ignored directories.
exclude = [ ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__init__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    ".venv",
    "migrations"
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104", "N999"]
"/**/tests/*.py" = ["S101","PLR2004", "B008", 'N806', 'D103', 'F821', 'N999']
"app/infra/*" = ["B008", "A002","A001", "A003", "RUF100","FBT001", "F811","F401","TRY302"]

[tool.ruff.lint.isort]
known-first-party = ["app"]
known-third-party = ["fastapi"]

[tool.ruff.format]
preview = true
quote-style = 'single'


[tool.pylint.main]
lint.ignore = [ "pyproject.toml", "conftest.py" ]

[tool.pylint.master]
extension-pkg-allow-list = ["pydantic", "rapidjson"]

[tool.pylint.refactoring]
# Maximum number of nested blocks for function / method body
max-nested-blocks = 5

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = ["--strict-markers"]
junit_family= "xunit1"
markers = [
  "smoke: main tests to validate system",
  "integrate: integrate tests",
]
pythonpath = "."


[tool.coverage.run]
omit = [
    "backend/tests/*"
]
[tool.coverage.report]
skip_empty = true


[tool.uv.workspace]
members = ["test"]

[virtualenvs]
path = ".venv"
