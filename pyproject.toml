[tool.poetry]
name = "fast-ecommerce"
version = "0.2.0"
description = "Ecommerce API"
authors = ["JÃ´natas Oliveira <contato@jonatasoliveira.me>"]
license = "AGPL-3.0-or-later"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "*"
uvicorn = "*"
alembic = "*"
sqlalchemy = {version = "~2", extras = ["asyncio"]}
databases = {version = "*", extras = ["postgress", "sqlite"]}
passlib = "*"
pyjwt = "*"
python-dotenv = "*"
asyncpg = "*"
aiosqlite = "*"
loguru = "*"
mail-service = "*"
python-jose = {version = "*", extras = ["cryptography"]}
python-multipart = "*"
bcrypt = "*"
beautifulsoup4 = "*"
lxml = "*"
Jinja2 = "*"
sendgrid = "*"
httpx = "*"
pytest-asyncio = "*"
psycopg2-binary = "*"
importlib-metadata = "*"
typing-extensions = "*"
sentry-sdk = {version = "*", extras = ["fastapi"]}
cloudinary = "*"
Pillow = "*"
aiofiles = "*"
boto3 = "*"
zipp = "*"
dynaconf = "*"
redis = "^4.6.0"
stripe = "^5.5.0"
celery = {version = "^5.3.1", extras = ["librabbitmq"]}
pydantic-settings = "^2.0.2"
factory-boy = "^3.3.0"

[tool.poetry.group.dev.dependencies]
blue = "*"
isort = "*"
ruff = "*"
coverage = "*"
pytest = "*"
ipdb = "*"
pytest-mock = "*"
pytest-cov = "*"
pytest-sugar = "*"
pytest-watch = "*"
pytest-ordering = "*"
pytest-asyncio = "*"
factory-boy = "^3.2.1"
pytest-env = "^0.8.2"
anyio = "^3.7.1"

[tool.ruff]
select = ["A", "B", "C", "D", "E", "F", "G", "N", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
src = ["app", "tests"]
fixable = ["A", "B", "C", "D", "E", "F", "G", "N", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
ignore = ["D100", "D101", "D102", "D107", "D203", "D213"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__init__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    ".venv",
    "migrations"
]

[tool.ruff.flake8-annotations]
mypy-init-return = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104", "N999"]
"/**/tests/*.py" = ["S101","PLR2004", "B008", 'N806', 'D103', 'F821', 'ANN201', 'ANN001', 'N999']
"app/infra/*" = ["B008", "A002","A001", "A003", "RUF100","FBT001", "F811","F401","TRY302"]

[tool.ruff.isort]
known-first-party = ["app"]
known-third-party = ["fastapi"]

[tool.pylint.main]
ignore = [ "pyproject.toml", "conftest.py" ]

[tool.pylint.master]
extension-pkg-allow-list = ["pydantic", "rapidjson"]

[tool.pylint.refactoring]
# Maximum number of nested blocks for function / method body
max-nested-blocks = 5

[tool.pytest.ini_options]
addopts = ["--strict-markers"]
junit_family= "xunit1"
markers = [
  "smoke: main tests to validate system",
  "integrate: integrate tests",
]
pythonpath = "."

[tool.blue]
extend-exclude = '(migrations/)'

[tool.coverage.run]
omit = [
    "backend/tests/*"
]
[tool.coverage.report]
skip_empty = true

[virtualenvs]
path = ".venv"

[build-system]
requires = ["poetry-core>=1.0.0","setuptools", "wheel"]
build-backend = "poetry.core.masonry.api"
